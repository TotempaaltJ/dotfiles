""" vimrc
" Run any command styled [cmd] by pressing Control+E.
" [so $MYVIMRC | nohlsearch] [Gstatus] [Gdiff]
nnoremap <C-e> "cyi[<CR>:@c<CR>

set nocompatible               " be iMproved
filetype off                   " required!

"" Plug plugins
" [PlugInstall] [PlugClean]
call plug#begin('~/.vim/plugged')
" Layout
Plug 'vim-scripts/Zenburn'
Plug 'bling/vim-airline'
Plug 'bling/vim-bufferline'

" Files
Plug 'kien/ctrlp.vim'
Plug 'scrooloose/nerdtree'

" SVC
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-fugitive'

" Editing
Plug 'Valloric/YouCompleteMe', { 'do': './install.sh --clang-completer' }
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'
Plug 'Raimondi/delimitMate'

" Language-specific
Plug 'nvie/vim-flake8'

" Utility
Plug 'pthrasher/conqueterm-vim'
Plug 'vim-scripts/Gundo'
call plug#end()


"" Some basic configuration
filetype plugin indent on
set encoding=utf-8
syntax on
set t_Co=256
colorscheme zenburn

"" Functional settings
set hidden         " Hide buffers, don't close them.
set number         " Line numbers plz.
set showmatch      " Matching parenthesis.
set backspace=eol,start " Backspace!
set title          " Window title overwrite.
set wildignore=*.swp,*.bak,*.pyc,*.class
                   " Ignore stupid files.
set scrolloff=3    " Show three lines below the cursor.
set ttyfast

"" Grouped settings
" Visible whitespace characters
set list
set listchars=tab:»\ ,trail:·,extends:…,eol:¶
set showbreak=↪

" Less annoyances
set visualbell
set noerrorbells

" Enable the mouse!
set mouse=a
if has("mouse_sgr")
    set ttymouse=sgr
else
    set ttymouse=xterm2
end

if v:version >= 703
  " Colored area after 80th character
  hi ColorColumn ctermbg=238
  let &colorcolumn=join(range(81,999),",")
endif

" Better history/undo
set history=1000
set undolevels=1000

" No mess
set nobackup
set noswapfile

" Better indentation
set expandtab
set tabstop=4
set autoindent
set copyindent
set shiftwidth=4
set smarttab
set shiftround

" Better searching
set ignorecase
set smartcase
set hlsearch

"" (Re)maps
" Who needs Ex mode?
nnoremap Q <nop>

" ; is way better than :
map ; :
noremap ;; ;

" , is a better leader than \
let mapleader=","

" Pasting? Press F2 first!
set pastetoggle=<F2>

" No arrow keys.
map <Up> <NOP>
map <Down> <NOP>
map <Left> <NOP>
map <Right> <NOP>

" But Ctrl+Arrow switches between buffers!
nnoremap <silent> <C-k> :new<CR>
nnoremap <silent> <C-j> :bp<bar>sp<bar>bn<bar>bd<CR>
nnoremap <silent> <C-h> :bp<CR>
nnoremap <silent> <C-l> :bn<CR>

" Clear searches with ,/
nmap <silent> <leader>/ :nohlsearch<CR>

" ,ev and ,sv to edit and reload .vimrc
nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR><leader>/

" Reselect visual block after indent/outdent.
vnoremap < <gv
vnoremap > >gv

"" Plugins
" Airline
set laststatus=2
" Disable fancy symbols by default.
"let g:Powerline_symbols = 'fancy'

" GitGutter
highlight clear SignColumn

" MiniBufExpl
let g:miniBufExplMapWindowNavVim = 1
let g:miniBufExplMapWindowNavArrows = 1
let g:miniBufExplMapCTabSwitchBufs = 1
let g:miniBufExplModSelTarget = 1

" NERDTree
map <C-n> :NERDTreeToggle<CR>

" Jedi
let g:jedi#use_tabs_not_buffers = 0

" vim-flake8
autocmd BufWritePost *.py call Flake8()

" CtrlP
let g:ctrlp_cmd = 'CtrlPMixed'

" Gundo
map U :GundoToggle<CR>

" YCM
let g:ycm_path_to_python_interpreter = '/usr/bin/python'
let g:ycm_key_list_previous_completion=['<Up>']

" UltiSnips
let g:UltiSnipsExpandTrigger="<c-j>"
